# This file contains common makefile definitions and is designed to be included
# into projects using this support module.

# These flags ensure that debug information is available if required.
USR_CFLAGS += -g
USR_LDFLAGS += -g
USR_LDFLAGS += -rdynamic

USR_CFLAGS += -std=gnu99
USR_CFLAGS += -Werror -Wall -Wextra -Wno-unused-parameter
USR_CFLAGS += -Wundef
USR_CFLAGS += -Wshadow
USR_CFLAGS += -Wcast-align
USR_CFLAGS += -Wcast-qual
USR_CFLAGS += -Wwrite-strings
USR_CFLAGS += -Wredundant-decls
USR_CFLAGS += -Wmissing-prototypes
USR_CFLAGS += -Wmissing-declarations
USR_CFLAGS += -Wstrict-prototypes
USR_CFLAGS += -Wconversion

# Annoyingly we need this when playing tricks with default initialisers
USR_CFLAGS += -Wno-missing-field-initializers

USR_CFLAGS += -Wno-system-headers
# This tells the compiler to ignore errors generated by EPICS includes.  We need
# this because the EPICS headers have non strict prototypes in places.
USR_CPPFLAGS += -isystem $(EPICS_BASE)/include


# The following nasty trickery is required when building on vxWorks.  We need to
# replace the standard compiler with a more recent compiler providing C99
# support, but only for the C files.
ifeq ($(T_A),vxWorks-ppc604_long)
    CC = $(ALTIVEC_CC)

    USR_CPPFLAGS += -DVX_WORKS
    USR_CPPFLAGS += -isystem $(TORNADO)/target/h
    USR_CFLAGS += -Wno-strict-prototypes
    FILTEROUT_CFLAGS += -Wno-missing-field-initializers
    FILTEROUT_CFLAGS += -mno-implicit-fp
    FILTEROUT_CFLAGS += -Wconversion
    FILTEROUT_CFLAGS += -Wextra

    CFLAGS := $(filter-out $(FILTEROUT_CFLAGS),$(CFLAGS))

    epics_device.o: CFLAGS += -Wno-cast-align
endif
