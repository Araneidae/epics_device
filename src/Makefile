TOP = ..

include $(TOP)/configure/CONFIG
#----------------------------------------
#  ADD MACRO DEFINITIONS AFTER THIS LINE
#=============================

#USR_CFLAGS += -S
#USR_CFLAGS += -E
#USR_CFLAGS += -g

USR_CFLAGS += -std=gnu99
USR_CFLAGS += -Werror -Wall -Wextra -Wno-unused-parameter
USR_CFLAGS += -Wundef
USR_CFLAGS += -Wshadow
USR_CFLAGS += -Wcast-align
USR_CFLAGS += -Wcast-qual
USR_CFLAGS += -Wwrite-strings
USR_CFLAGS += -Wredundant-decls
USR_CFLAGS += -Wmissing-prototypes
USR_CFLAGS += -Wmissing-declarations
USR_CFLAGS += -Wstrict-prototypes
USR_CFLAGS += -Wconversion

# Annoyingly we need this when playing tricks with default initialisers
USR_CFLAGS += -Wno-missing-field-initializers

USR_CFLAGS += -Wno-system-headers
# This tells the compiler to ignore errors generated by EPICS includes.  We need
# this because the EPICS headers have non strict prototypes in places.
USR_CPPFLAGS += -isystem $(EPICS_BASE)/include



ifdef DEBUG_TRACEBACK
# Allow panic_error() backtrace to show a backtrace with useful information.
USR_CFLAGS += -O0
USR_CFLAGS += -g
USR_CFLAGS += -mapcs-frame
USR_LDFLAGS += -rdynamic
endif

STATIC_BUILD = YES


#=============================

LIBRARY_IOC += epics_device

INC += error.h
INC += epics_device.h

DBD += epics_device.dbd


epics_device_SRCS += error.c            # General error handling support
epics_device_SRCS += epics_device.c     # EPICS device support framework
epics_device_SRCS += epics_extra.c      # Miscellanous extra EPICS support
epics_device_SRCS += hashtable.c        # Simple generic hash table
epics_device_SRCS += persistence.c      # Persistent value support for EPICS
epics_device_SRCS += pvlogging.c        # Logging for all caputs
epics_device_SRCS += config_file.c      # Read configuration




include $(TOP)/configure/RULES
